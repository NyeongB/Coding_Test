코딩 테스트 유용한 팁
사용언어 : JAVA

-- 문자형으로된 숫자 int형으로 변환
char ch ='9';

int num = ch - '0';

- 문자열 자르기
str.split("");

- 문자열에서 특정인덱스 문자 가져오기
str.charAt(index);

- 문자열 전체 대문자, 소문자로 바꾸기
str.toLowerCase();
str.toUpperCase();

- 문자 대소문자 판별
Character.isLowerCase('a');	→ true
Character.isUpperCase('b'); → false

- 오름차순, 내림차순 정렬, String 배열 나누기, 합치기
		
String [] str = "bcead".split("");
		
// 오름차순 정렬
Arrays.sort(str);

// 내림차순 정렬(정렬이되어있어야 가능)
Collections.reverse(Arrays.asList(str));

// String 배열 다시 합치기 
String result = String.join("", str);

-- 2차원 배열의 크기 
int [][] arr = new int[2][4];	// 전부 0으로 초기화된다.

행의 갯수 : arr.length;
열의 갯수 : arr[0].length;

-- indexOf안에 String 형 통채로 들어가는것도 가능 
String [] str = {"119","97674223","01195524421"};
		
System.out.println(str[2].indexOf(str[0]));		

-- 내림차순 정렬 
Integer[] numbers = {5,2,8,10,6,9};

Arrays.sort(numbers, Collections.reverseOrder());

-- 향상된 for문
for(int n : arr)
			System.out.println(n);
			
---------------------------------------------------------
// 해시맵
public static void main(String[] args)
	{
		int [] arr = new int[10];
		
		for(int i=0; i<arr.length; i++)
			arr[i] = i+1;
		
		for(int n : arr)
			System.out.println(n);
		
		HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();
		
		for(int n : arr)
		{
			hm.put(n,1);
		}
		
		for(int n : arr)
		{
			if(hm.get(n)!=null)
				System.out.println("Key : "+n+" Value :" + hm.get(n));
		}
		
		for(int n : hm.keySet()) // 키값들 반환함
		{
			System.out.println(n);
		}
	}
	
	// hm.containsKey(element) 포함되어있는 여부 확인 
	// hm.remove(element) 해당 키에 맞는 밸류 제거 
	
---------------------------------------------------------

String [] str = s.split("\\+"); 문자를 기준으로 자를려면 \\이 붙어있어야한다.

-----------------------------------------------------------

Tree Traveling

Preorder : root - left - right
Inorder : left - root - right
Postorder : left - right - root